package org.tuc.utils;

import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;
import org.tuc.dataClass.DataPagePair;
   
/**
 * The ReadFile class contains a static method for reading data from a file and generating a list of data page pairs
 * consisting of a key and the index of the page on which that key is located. This class is intended to be used in
 * conjunction with the WriteFile class to read data that has been previously written to a file.
 */
public class ReadFile {
	
	  //This class should not be instantiated
	  private ReadFile()  {
		    throw new IllegalStateException("Utility class");
		  }
	
	// The buffer size used for reading data pages
	private static final byte[] buffer = new byte[WriteFile.DATA_PAGE_SIZE];
	
    // The maximum number of data page pairs that can be stored in the keyPairList
    private static final int MAX_INSTANCES = 200000;
    
    // The list of data page pairs generated by the readDataPairs method
	public static List<DataPagePair> keyPairList = new ArrayList<>(MAX_INSTANCES);
	
    /**
     * This method is used to create a list of pairs type key-PageIndex 
     * 
     * @param stringLength :The lenght of the string
     * @param file :in instance of the dataPairFile.
     * @return : A list with the pairs.
     * @throws IOException
     */
	public static List<DataPagePair> readDataPairs(int stringLength , RandomAccessFile file) throws IOException {
	    int pageCount = 0;
	        int bytesRead = file.read(buffer);
	        while (bytesRead != -1) {
	            ByteBuffer bb = ByteBuffer.wrap(buffer);
	            for (int i = 0; i < bytesRead / (Integer.BYTES + stringLength); i++) {
	                int key = bb.getInt();
	                byte[] stringBytes = new byte[stringLength];
	                bb.get(stringBytes);
	                keyPairList.add(new DataPagePair(key, pageCount));
	                //increase the pageCount according the stringLenght.
	                if ((i+1) % (WriteFile.DATA_PAGE_SIZE / (Integer.BYTES + stringLength)) == 0) {
	                    pageCount++;
	                }
	            }
	            bytesRead = file.read(buffer);
	        }
	    return keyPairList;
	}
	}